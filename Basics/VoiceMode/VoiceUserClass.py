import speech_recognition
import os
import random 

# –ú–µ—Ç–æ–¥–∏ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ SpeechRecognition, —è–∫—ñ –º–∏ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –º–æ–≤–∏ –≤ —Ç–µ–∫—Å—Ç:
# recognize_bing(): –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –º–æ–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Microsoft Bing Speech API (–ø–æ—Ç—Ä—ñ–±–µ–Ω api key)
# recognize_google(): –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –º–æ–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Google Speech API 
# recognize_google_cloud(): –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –º–æ–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Google Cloud Speech API (–ø–æ—Ç—Ä—ñ–±–µ–Ω api key)
# recognize_houndify(): –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –º–æ–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Houndify API –≤—ñ–¥ SoundHound (–ø–æ—Ç—Ä—ñ–±–µ–Ω api key)
# recognize_ibm(): –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –º–æ–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é IBM Speech to Text API (–ø–æ—Ç—Ä—ñ–±–µ–Ω api key)
# recognize_sphinx(): –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –º–æ–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é PocketSphinx API (–ø–æ—Ç—Ä—ñ–±–µ–Ω api key) 
# –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞—á–∞ –º–æ–≤–∏

sr = speech_recognition.Recognizer()
sr.pause_threshold = 0.5  # –ß–∞—Å –∑–∞—Ç—Ä–∏–º–∫–∏ –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—É–∑–∏ –º—ñ–∂ —Å–ª–æ–≤–∞–º–∏

def listen_command():
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Å—É –≥–æ–ª–æ—Å–æ–≤–æ—ó –∫–æ–º–∞–Ω–¥–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º—ñ–∫—Ä–æ—Ñ–æ–Ω–∞.
    –ü–æ–≤–µ—Ä—Ç–∞—î —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω—É –∫–æ–º–∞–Ω–¥—É —É –≤–∏–≥–ª—è–¥—ñ —Ç–µ–∫—Å—Ç—É –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É.
    """
    try: 
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º—ñ–∫—Ä–æ—Ñ–æ–Ω –¥–ª—è –∑–∞–ø–∏—Å—É
        with speech_recognition.Microphone() as mic:
            sr.adjust_for_ambient_noise(source=mic, duration=0.5)  # –û—Ü—ñ–Ω—é—î–º–æ –Ω–∞–≤–∫–æ–ª–∏—à–Ω—ñ–π —à—É–º
            audio = sr.listen(source=mic)  # –ó–∞–ø–∏—Å—É—î–º–æ –≥–æ–ª–æ—Å
            query = sr.recognize_google(audio_data=audio, language='uk-UA').lower()  # –†–æ–∑–ø—ñ–∑–Ω–∞—î–º–æ –∫–æ–º–∞–Ω–¥—É
        
        return query
    except speech_recognition.UnknownValueError:
        return 'Dawn... –ù–µ –∑—Ä–æ–∑—É–º—ñ–≤, —â–æ —Ç–∏ —Å–∫–∞–∑–∞–≤ :/'

def greeting():
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –ü–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è–º.
    """
    return '–ü—Ä–∏–≤—ñ—Ç –ë–æ–≥–¥–∞–Ω–µ!'

def create_task():
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –∑–∞–¥–∞—á—ñ –¥–æ —Å–ø–∏—Å–∫—É —Å–ø—Ä–∞–≤.
    –ó–∞–ø–∏—Ç—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–æ –Ω–æ–≤—É –∑–∞–¥–∞—á—É —ñ –¥–æ–¥–∞—î —ó—ó –¥–æ —Ñ–∞–π–ª—É.
    –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –¥–æ–¥–∞–Ω—É –∑–∞–¥–∞—á—É.
    """
    print('–©–æ –¥–æ–¥–∞–º–æ –≤ —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤?')

    query = listen_command()  # –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤—É –∑–∞–¥–∞—á—É

    # –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∑—ñ —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á
    todo_file_path = os.path.join(os.path.dirname(__file__), 'todo-list.txt')

    try:
        with open(todo_file_path, 'r', encoding='utf-8') as file:
            task_number = len(file.readlines()) + 1  # –ù—É–º–µ—Ä–∞—Ü—ñ—è –∑–∞–¥–∞—á
    except FileNotFoundError:
        task_number = 1  # –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π, —Ç–æ –ø–æ—á–∏–Ω–∞—î–º–æ –∑ 1

    # –î–æ–¥–∞—î–º–æ –Ω–æ–≤—É –∑–∞–¥–∞—á—É –≤ —Ñ–∞–π–ª
    with open(todo_file_path, 'a', encoding='utf-8') as file:
        file.write(f'‚ùóÔ∏è{task_number}. {query}\n')

    return f'–ó–∞–¥–∞—á–∞ {task_number}: "{query}" –¥–æ–¥–∞–Ω–∞ –≤ todo-list!'

def play_music():
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –º—É–∑–∏—á–Ω–æ–≥–æ —Ñ–∞–π–ª—É –∑ –ø–∞–ø–∫–∏ "Music".
    –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –º—É–∑–∏–∫—É, —â–æ –≥—Ä–∞—î.
    """
    music_folder = 'Music'  # –ü–∞–ø–∫–∞ –∑ –º—É–∑–∏–∫–æ—é
    if not os.path.exists(music_folder):  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –ø–∞–ø–∫–∞
        return "–ü–∞–ø–∫–∞ –∑ –º—É–∑–∏–∫–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞."

    files = os.listdir(music_folder)  # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤ –≤ –ø–∞–ø—Ü—ñ
    if not files:
        return "–£ –ø–∞–ø—Ü—ñ –Ω–µ–º–∞—î –º—É–∑–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤."

    random_file = f'{music_folder}/{random.choice(files)}'  # –í–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ–∞–π–ª
    os.system(f'start {random_file}')  # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ø–ª–µ—î—Ä
    
    return f'–¢–∞–Ω—Ü—é—î–º–æ –ø—ñ–¥ {random_file.split("/")[-1]} üîä'

def main():
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–æ–≥—Ä–∞–º–∏, —â–æ –≤–∏–∑–Ω–∞—á–∞—î, —è–∫—É –∫–æ–º–∞–Ω–¥—É –≤–∏–∫–æ–Ω–∞—Ç–∏.
    –í–∏–∫–ª–∏–∫–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –≥–æ–ª–æ—Å–æ–≤–æ—ó –∫–æ–º–∞–Ω–¥–∏.
    """
    print("–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–∫–∞–∂–∏ –∫–æ–º–∞–Ω–¥—É:")
    query = listen_command()  # –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–º–∞–Ω–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

    if query == '–ø—Ä–∏–≤—ñ—Ç':
        print(greeting())  # –í–∏–∫–æ–Ω—É—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    elif query == '–≤—ñ–¥–∫—Ä–∏–π —Å–ø–∏—Å–æ–∫':
        print(create_task())  # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É –∑–∞–¥–∞—á—É
    elif query == '—É–≤—ñ–º–∫–Ω–∏ –º—É–∑–∏–∫—É':
        print(play_music())  # –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –º—É–∑–∏–∫—É
    else:
        print(f'–ù–µ –≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞: "{query}"')  # –Ø–∫—â–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–≤—ñ–¥–æ–º–∞

if __name__ == '__main__':
    main()  # –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
